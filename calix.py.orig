#!/usr/bin/env python
# -*- coding: UTF8 -*-

# Python module calix.py
# Autogenerated from calix.glade
# Generated on Thu Jul 14 19:39:18 2005

# Warning: Do not delete or modify comments related to context
# They are required to keep user's code

app_name = "calix"
app_version = "0.0.1"

glade_dir = ""
locale_dir = ""

from SimpleGladeApp import SimpleGladeApp
from SimpleGladeApp import bindtextdomain
import os
import gtk

bindtextdomain(app_name, locale_dir)

class Window(SimpleGladeApp):
	def __init__(self, path="calix.glade", root="window", domain=app_name, **kwargs):
		path = os.path.join(glade_dir, path)
		SimpleGladeApp.__init__(self, path, root, domain, **kwargs)

	#context Window.new {
	def new(self):
		print "A new %s has been created" % self.__class__.__name__
	#context Window.new }

	#context Window custom methods {
	#--- Write your own methods here ---#
	#context Window custom methods }

	#context Window.on_window_delete_event {
	def on_window_delete_event(self, widget, *args):
		print "on_window_delete_event called with self.%s" % widget.get_name()
	#context Window.on_window_delete_event }

	#context Window.on_notebook_switch_page {
	def on_notebook_switch_page(self, widget, *args):
		print "on_notebook_switch_page called with self.%s" % widget.get_name()
	#context Window.on_notebook_switch_page }

	#context Window.on_hscale_grey_value_changed {
	def on_hscale_grey_value_changed(self, widget, *args):
		print "on_hscale_grey_value_changed called with self.%s" % widget.get_name()
	#context Window.on_hscale_grey_value_changed }

	#context Window.on_hscale_green_value_changed {
	def on_hscale_green_value_changed(self, widget, *args):
		print "on_hscale_green_value_changed called with self.%s" % widget.get_name()
	#context Window.on_hscale_green_value_changed }

	#context Window.on_hscale_blue_value_changed {
	def on_hscale_blue_value_changed(self, widget, *args):
		print "on_hscale_blue_value_changed called with self.%s" % widget.get_name()
	#context Window.on_hscale_blue_value_changed }

	#context Window.on_hscale_red_value_changed {
	def on_hscale_red_value_changed(self, widget, *args):
		print "on_hscale_red_value_changed called with self.%s" % widget.get_name()
	#context Window.on_hscale_red_value_changed }

	#context Window.on_button_done_clicked {
	def on_button_done_clicked(self, widget, *args):
		print "on_button_done_clicked called with self.%s" % widget.get_name()
	#context Window.on_button_done_clicked }

	#context Window.on_button_next_clicked {
	def on_button_next_clicked(self, widget, *args):
		print "on_button_next_clicked called with self.%s" % widget.get_name()
	#context Window.on_button_next_clicked }

	#context Window.on_button_back_clicked {
	def on_button_back_clicked(self, widget, *args):
		print "on_button_back_clicked called with self.%s" % widget.get_name()
	#context Window.on_button_back_clicked }

	#context Window.on_button_cancel_clicked {
	def on_button_cancel_clicked(self, widget, *args):
		print "on_button_cancel_clicked called with self.%s" % widget.get_name()
	#context Window.on_button_cancel_clicked }

	#context Window.on_button_reset_clicked {
	def on_button_reset_clicked(self, widget, *args):
		print "on_button_reset_clicked called with self.%s" % widget.get_name()
	#context Window.on_button_reset_clicked }

#context main {

def main():
	window = Window()

	# SimpleGladeApp.run() must be called just once per program
	window.run()

if __name__ == "__main__":
	main()

#context main }
